hydra:
  run:
    dir: outputs/${dataset.name}/${model.name}/${training.name}
  sweep:
    dir: outputs/${dataset.name}/${model.name}
    subdir: ${training.name}:${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - model=nnunet
    - dataset=ct_128_double_jz_v2
    - training=training_128_jz_v2
    - dataset.cv=cv1
  job:
    name: mainDoubleV2
    chdir: null
    override_dirname: dataset.cv=cv1,dataset=ct_128_double_jz_v2,model=nnunet,training=training_128_jz_v2
    id: ???
    num: ???
    config_name: default
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.1
    version_base: '1.1'
    cwd: /home/wndzimbong/IRCAD_DOSSIER/scaffold_PROJECTS/trusted_datapaper_ds/src/trusted_datapaper_ds/segmentation/nnunet_cotr
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/wndzimbong/IRCAD_DOSSIER/scaffold_PROJECTS/trusted_datapaper_ds/src/trusted_datapaper_ds/segmentation/nnunet_cotr/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      training: training_128_jz_v2
      model: nnunet
      dataset: ct_128_double_jz_v2
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose:
  - __main__
dataset:
  name: ct_128_double_jz_v2
  path:
    pth: /home/wndzimbong/IRCAD_DOSSIER/2022_2023/DOUBLE_ANNOTATION_DATA/MedSeg/CT_DATA
    im: ${dataset.path.pth}/CTimg_128_t
    seg1: ${dataset.path.pth}/CTmask_a1_128
    seg2: ${dataset.path.pth}/CTmask_a2_128
    seg12: ${dataset.path.pth}/CTmask_mf_128
  im_size:
  - 128
  - 128
  - 128
  classes: 1
  cv: cv1
model:
  name: NNUNET
  model: nnunet
  net_num_pool_op_kernel_sizes:
  - - 2
    - 2
    - 2
  - - 2
    - 2
    - 2
  - - 2
    - 2
    - 2
  - - 2
    - 2
    - 2
  - - 2
    - 2
    - 2
  net_conv_kernel_sizes:
  - - 3
    - 3
    - 3
  - - 3
    - 3
    - 3
  - - 3
    - 3
    - 3
  - - 3
    - 3
    - 3
  - - 3
    - 3
    - 3
  - - 3
    - 3
    - 3
  feature_size: 0
  base_num_features: 32
training:
  name: training_128_jz_full_v2
  dbg: true
  gpu: 0
  use_gpu: true
  only_val: false
  optim: sgd
  lr: 0.01
  weight_decay: 1.0e-05
  epochs: 1000
  iter: 250
  online_validation: true
  eval_step: 2
  batch_size: 2
  num_workers: 4
  crop_size:
  - 128
  - 128
  - 128
  do_clip: true
  do_schedul: true
  loss: CrossDice
  pth: /home/wndzimbong/IRCAD_DOSSIER/2022_2023/DOUBLE_ANNOTATION_DATA/MedSeg/US_DATA/medseg_results
  augmentations:
    rotate:
      x_:
      - -0.5235987755982988
      - 0.5235987755982988
      y_:
      - -0.5235987755982988
      - 0.5235987755982988
      z_:
      - -0.5235987755982988
      - 0.5235987755982988
      p_: 0.2
    scale:
      min_: 0.7
      max_: 1.4
      p_: 0.2
    gamma:
      g_:
      - 0.7
      - 1.5
      p_: 0.3
  inference:
    stride:
    - 1
    - 1
    - 1
  checkpoint:
    save: 2
    load: true
    load_path: ${model.pth}/${model.name}/checkpoint/latest.pt
    path: ${model.pth}/${model.name}/checkpoint
